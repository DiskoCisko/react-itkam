{"version":3,"sources":["components/Dialogs/Diologs.module.css","components/Dialogs/ChatList.module.css","components/Dialogs/ChatsList.js","components/Dialogs/Messages.js","components/Dialogs/Diologs.js","components/Dialogs/DiologsContainer.js","HOC/withAuthRedirect.js"],"names":["module","exports","ChatList","props","chatList","dataUsers","map","item","index","to","path","className","s","link","name","Messages","message","author","Dialogs","dataMessages","exact","content","ChatsList","leftNav","main","compose","connect","state","getDataUsersSelector","getDataMessagesSelector","Component","isAuth","auth"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,QAAU,2B,oBCA3DD,EAAOC,QAAU,CAAC,KAAO,yB,8GCcVC,EAZE,SAACC,GACd,IAAIC,EAAWD,EAAME,UAAUC,KAAI,SAACC,EAAMC,GACtC,OAAO,cAAC,IAAD,CAASC,GAAIF,EAAKG,KAAkBC,UAAWC,IAAEC,KAAjD,SACEN,EAAKO,MADsBN,MAIxC,OACI,6BACKJ,KCEEW,EAXE,SAACZ,GAEd,OACI,8BACKA,EAAMa,QAAQA,QACf,+BACCb,EAAMa,QAAQC,a,OCyBZC,EAvBC,SAACf,GAEb,IAAIa,EAAUb,EAAMgB,aAAab,KAAI,SAACC,EAAMC,GACxC,OAAO,cAAC,IAAD,CAAOE,KAAMH,EAAKG,KAAkBU,OAAK,EAAzC,SACP,cAAC,EAAD,CACCJ,QAAST,KAF0BC,MAQxC,OACI,sBAAKG,UAAWC,IAAES,QAAlB,UACI,cAACC,EAAD,CAAWjB,UAAWF,EAAME,UAAWM,UAAWC,IAAEW,UACpD,qBAAKZ,UAAWC,IAAEY,KAAlB,SACI,cAAC,IAAD,UACIR,U,uBCNLS,sBACXC,aAVoB,SAACC,GAErB,MAAO,CACHR,aAAcS,YAAqBD,GACnCtB,UAAUwB,YAAwBF,MAMb,KCfC,SAACG,GAY3B,OAD4BJ,aAVR,SAACC,GACrB,MAAO,CACHI,OAAQJ,EAAMK,KAAKD,UAQ8B,GAAzBL,EALP,SAACvB,GAClB,OAAKA,EAAM4B,OAEG,cAACD,EAAD,eAAe3B,IADlB,cAAC,IAAD,CAAUM,GAAG,gBDMjBgB,CAGbP","file":"static/js/4.3ee4c2c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Diologs_title__2MZp-\",\"content\":\"Diologs_content__1NNbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"ChatList_link__3a44O\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './ChatList.module.css';\r\nconst ChatList = (props) => {\r\n    let chatList = props.dataUsers.map((item, index) => {\r\n        return <NavLink to={item.path} key={index} className={s.link}>\r\n                {item.name}\r\n            </NavLink>\r\n    })\r\n    return (\r\n        <ul>\r\n            {chatList}\r\n        </ul>\r\n    )\r\n}\r\nexport default ChatList;","import React from 'react';\r\n\r\nconst Messages = (props) => {\r\n    debugger;\r\n    return (        \r\n        <p> \r\n            {props.message.message}\r\n            <span>\r\n            {props.message.author}\r\n            </span>\r\n        </p>\r\n    )\r\n}\r\nexport default Messages;","import React from 'react';\r\nimport s from './Diologs.module.css';\r\nimport ChatsList from './ChatsList';\r\nimport Messages from './Messages';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Redirect,\r\n    Route\r\n  } from \"react-router-dom\";\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    let message = props.dataMessages.map((item, index) => {\r\n        return <Route path={item.path} key={index} exact>\r\n        <Messages \r\n         message={item}/>\r\n    </Route>\r\n    })\r\n    \r\n    \r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ChatsList dataUsers={props.dataUsers} className={s.leftNav}/>\r\n            <div className={s.main}>\r\n                <Router>\r\n                   {message}\r\n                </Router>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","\r\nimport { connect } from 'react-redux'\r\nimport Dialogs from './Diologs';\r\nimport {withAuthRedirect} from './../../HOC/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport {\r\n    getDataUsersSelector,\r\n    getDataMessagesSelector\r\n} from './../../reduxe/selector';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dataMessages: getDataUsersSelector(state),\r\n        dataUsers:getDataMessagesSelector(state),\r\n        // isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {} ),\r\n    withAuthRedirect   \r\n)(Dialogs)\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n    Redirect,\n  } from \"react-router-dom\";\n\nexport let withAuthRedirect = (Component) => {\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n    const RedirectAuth = (props) => {\n        if (!props.isAuth) {\n            return <Redirect to=\"/login\" />\n        } else return <Component {...props}/>\n    }\n    const ConnectRedirectAuth = connect(mapStateToProps, {} )(RedirectAuth);\n    return ConnectRedirectAuth\n}"],"sourceRoot":""}